diff --git /dev/null b/modules/activiti-webapp-rest2/src/main/java/org/activiti/rest/api/process/ProcessDefinitionBPMNResource.java
new file mode 100644
index 0000000..5fe4646
--- /dev/null
+++ b/modules/activiti-webapp-rest2/src/main/java/org/activiti/rest/api/process/ProcessDefinitionBPMNResource.java
@@ -0,0 +1,59 @@
+/* Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.activiti.rest.api.process;
+
+import java.io.InputStream;
+
+import org.activiti.engine.ActivitiException;
+import org.activiti.engine.RepositoryService;
+import org.activiti.engine.impl.RepositoryServiceImpl;
+import org.activiti.engine.impl.bpmn.deployer.BpmnDeployer;
+import org.activiti.engine.impl.persistence.entity.ProcessDefinitionEntity;
+import org.activiti.rest.api.ActivitiUtil;
+import org.activiti.rest.api.SecuredResource;
+import org.restlet.data.MediaType;
+import org.restlet.representation.InputRepresentation;
+import org.restlet.resource.Get;
+
+/**
+ * @author Manuel Saelices
+ */
+public class ProcessDefinitionBPMNResource extends SecuredResource {
+  
+  @Get
+  public InputRepresentation getBPMN() {
+    if(authenticate() == false) return null;
+    
+    String processDefinitionId = (String) getRequest().getAttributes().get("processDefinitionId");
+    
+    if(processDefinitionId == null) {
+      throw new ActivitiException("No process definition id provided");
+    }
+
+    InputStream stream = null;
+    RepositoryService repository = ActivitiUtil.getRepositoryService();
+    ProcessDefinitionEntity pde = (ProcessDefinitionEntity) ((RepositoryServiceImpl) ActivitiUtil.getRepositoryService())
+            .getDeployedProcessDefinition(processDefinitionId);
+
+    for (String resource: repository.getDeploymentResourceNames(pde.getDeploymentId())) {
+    	if (resource.endsWith(BpmnDeployer.BPMN_RESOURCE_SUFFIX)) {
+    		stream = repository.getResourceAsStream(pde.getDeploymentId(), resource);
+    	}
+    }
+    if(stream == null) {
+        throw new ActivitiException("Process definition " + processDefinitionId + " could not be found");
+    }
+    return new InputRepresentation(stream, MediaType.APPLICATION_XML);  
+  }
+}
diff --git a/modules/activiti-webapp-rest2/src/main/java/org/activiti/rest/application/ActivitiRestApplication.java b/modules/activiti-webapp-rest2/src/main/java/org/activiti/rest/application/ActivitiRestApplication.java
index 2f02ac1..d72cf0b 100644
--- a/modules/activiti-webapp-rest2/src/main/java/org/activiti/rest/application/ActivitiRestApplication.java
+++ b/modules/activiti-webapp-rest2/src/main/java/org/activiti/rest/application/ActivitiRestApplication.java
@@ -30,6 +30,7 @@ import org.activiti.rest.api.management.JobsResource;
 import org.activiti.rest.api.management.TableDataResource;
 import org.activiti.rest.api.management.TableResource;
 import org.activiti.rest.api.management.TablesResource;
+import org.activiti.rest.api.process.ProcessDefinitionBPMNResource;
 import org.activiti.rest.api.process.ProcessDefinitionFormResource;
 import org.activiti.rest.api.process.ProcessDefinitionPropertiesResource;
 import org.activiti.rest.api.process.ProcessDefinitionsResource;
@@ -116,6 +117,7 @@ public class ActivitiRestApplication extends Application {
     router.attach("/process-instance", StartProcessInstanceResource.class);
     router.attach("/processInstance/{processInstanceId}", ProcessInstanceResource.class);
     router.attach("/processInstance/{processInstanceId}/diagram", ProcessInstanceDiagramResource.class);
+    router.attach("/process-definition/{processDefinitionId}/bpmn", ProcessDefinitionBPMNResource.class);
     router.attach("/process-definition/{processDefinitionId}/form", ProcessDefinitionFormResource.class);
     router.attach("/process-definition/{processDefinitionId}/properties", ProcessDefinitionPropertiesResource.class);
     
