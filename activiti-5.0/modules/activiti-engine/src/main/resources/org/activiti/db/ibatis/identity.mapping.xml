<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="org.activiti.persistence">

  <!-- USER INSERT -->

  <insert id="insertUser" parameterType="org.activiti.engine.impl.identity.UserEntity">
    insert into ACT_ID_USER (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)
    values (
      #{id ,jdbcType=VARCHAR},
      1,
      #{firstName ,jdbcType=VARCHAR},
      #{lastName ,jdbcType=VARCHAR},
      #{email ,jdbcType=VARCHAR},
      #{password ,jdbcType=VARCHAR}
    )
  </insert>

  <!-- USER UPDATE -->

  <update id="updateUser" parameterType="org.activiti.engine.impl.identity.UserEntity">
    update ACT_ID_USER set
      REV_ = #{revisionNext ,jdbcType=INTEGER},
      FIRST_ = #{firstName ,jdbcType=VARCHAR},
      LAST_ = #{lastName ,jdbcType=VARCHAR},
      EMAIL_ = #{email ,jdbcType=VARCHAR},
      PWD_ = #{password ,jdbcType=VARCHAR}
    where ID_ = #{id}
      and REV_ = #{revision}
  </update>
  
  <!-- USER DELETE -->

  <delete id="deleteUser" parameterType="string">
    delete from ACT_ID_USER where ID_ = #{userId} 
  </delete>

  <!-- USER RESULTMAP -->

  <resultMap id="userResultMap" type="org.activiti.engine.impl.identity.UserEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="revision" column="REV_" jdbcType="INTEGER" />
    <result property="firstName" column="FIRST_" jdbcType="VARCHAR" />
    <result property="lastName" column="LAST_" jdbcType="VARCHAR" />
    <result property="email" column="EMAIL_" jdbcType="VARCHAR" />
    <result property="password" column="PWD_" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- USER SELECT -->

  <select id="selectUserById" parameterType="string" resultMap="userResultMap">
    select * from ACT_ID_USER where ID_ = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="selectUsers" resultMap="userResultMap">
    select * from ACT_ID_USER
  </select>
  
  <select id="selectUsersByGroupId" parameterType="string" resultMap="userResultMap">
    select user.*
    from ACT_ID_USER user, ACT_ID_MEMBERSHIP membership
    where user.ID_ = membership.USER_ID_
      and membership.GROUP_ID_ = #{groupId}
  </select>
  
  <select id="selectUserByQueryCriteria" parameterType="org.activiti.engine.impl.UserQueryImpl" resultMap="userResultMap">
    select U.*
    <include refid="selectUserByQueryCriteriaSql" />
    <if test="orderBy != null">
      order by ${orderBy}
    </if>
  </select>
  
   <select id="selectUserCountByQueryCriteria" parameterType="org.activiti.engine.impl.UserQueryImpl" resultType="long">
    select count(U.ID_)
    <include refid="selectUserByQueryCriteriaSql" />
  </select>
  
  <sql id="selectUserByQueryCriteriaSql">
    from ACT_ID_USER U 
    <if test="groupId != null">
      inner join ACT_ID_MEMBERSHIP M on U.ID_ = M.USER_ID_
      inner join ACT_ID_GROUP G on M.GROUP_ID_ = G.ID_
    </if>
    <where>
      <if test="id != null">
        U.ID_ = #{id}
      </if>
      <if test="firstName != null">
        and U.FIRST_ = #{firstName}
      </if>
      <if test="firstNameLike != null">
        and U.FIRST_ like #{firstNameLike}
      </if>
      <if test="lastName != null">
        and U.LAST_ = #{lastName}
      </if>
      <if test="lastNameLike != null">
        and U.LAST_ like #{lastNameLike}
      </if>
      <if test="email != null">
        and U.EMAIL_ = #{email}
      </if>
      <if test="emailLike != null">
        and U.EMAIL_ like #{emailLike}
      </if>
      <if test="groupId != null">
        and G.ID_ = #{groupId}
      </if>
    </where>
  </sql>
  
  <!-- GROUP INSERT -->

  <insert id="insertGroup" parameterType="org.activiti.engine.impl.identity.GroupEntity">
    insert into ACT_ID_GROUP (ID_, REV_, NAME_, TYPE_)
    values (
      #{id ,jdbcType=VARCHAR},
      1, 
      #{name ,jdbcType=VARCHAR},
      #{type ,jdbcType=VARCHAR}
    )
  </insert>

  <!-- GROUP UPDATE -->
  
  <update id="updateGroup" parameterType="org.activiti.engine.impl.identity.GroupEntity">
    update ACT_ID_GROUP set
      REV_ = #{revisionNext ,jdbcType=INTEGER},
      NAME_ = #{name ,jdbcType=VARCHAR},
      TYPE_ = #{type ,jdbcType=VARCHAR}
    where ID_ = #{id}
       and REV_ = #{revision}
  </update>
  
  <!-- GROUP DELETE -->

  <delete id="deleteGroup" parameterType="string">
    delete from ACT_ID_GROUP where ID_ = #{groupId} 
  </delete>

  <!-- GROUP RESULTMAP -->

  <resultMap id="groupResultMap" type="org.activiti.engine.impl.identity.GroupEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="revision" column="REV_" jdbcType="INTEGER" />
    <result property="name" column="NAME_" jdbcType="VARCHAR" />
    <result property="type" column="TYPE_" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- GROUP SELECT -->

  <select id="selectGroupById" parameterType="string" resultMap="groupResultMap">
    select * from ACT_ID_GROUP where ID_ = #{id}
  </select>
  
  <select id="selectGroups" resultMap="groupResultMap">
    select * from ACT_ID_GROUP
  </select>
  
  <select id="selectGroupsByUserId" parameterType="string" resultMap="groupResultMap">
    select g.*
    from ACT_ID_GROUP g, ACT_ID_MEMBERSHIP membership
    where g.ID_ = membership.GROUP_ID_
      and membership.USER_ID_ = #{userId}
  </select>

  <select id="selectGroupsByUserIdAndGroupType" parameterType="map" resultMap="groupResultMap">
    select g.*
    from ACT_ID_GROUP g, ACT_ID_MEMBERSHIP membership
    where g.ID_ = membership.GROUP_ID_
      and membership.USER_ID_ = #{userId}
      <if test="groupType != null">
         and g.TYPE_ = #{groupType}
      </if>
  </select>
  
  <select id="selectGroupByQueryCriteria" parameterType="org.activiti.engine.impl.GroupQueryImpl" resultMap="groupResultMap">
    select G.*
    <include refid="selectGroupByQueryCriteriaSql" />
    <if test="orderBy != null">
      order by ${orderBy}
    </if>
  </select>
  
   <select id="selectGroupCountByQueryCriteria" parameterType="org.activiti.engine.impl.GroupQueryImpl" resultType="long">
    select count(G.ID_)
    <include refid="selectGroupByQueryCriteriaSql" />
  </select>
  
  <sql id="selectGroupByQueryCriteriaSql">
    from ACT_ID_GROUP G
    <if test="userId != null">
      inner join ACT_ID_MEMBERSHIP M on G.ID_ = M.GROUP_ID_
      inner join ACT_ID_USER U on M.USER_ID_ = U.ID_
    </if>
    <where>
      <if test="id != null">
        G.ID_ = #{id}
      </if>
      <if test="name != null">
        and G.NAME_ = #{name}
      </if>
      <if test="nameLike != null">
        and G.NAME_ like #{nameLike}
      </if>
      <if test="type != null">
        and G.TYPE_ = #{type}
      </if>
      <if test="userId != null">
        and U.ID_ = #{userId}
      </if>
    </where>
  </sql> 
  

  <!-- MEMBERSHIP INSERT -->

  <insert id="insertMembership" parameterType="map">
    insert into ACT_ID_MEMBERSHIP (USER_ID_, GROUP_ID_)
    values (
      #{userId ,jdbcType=VARCHAR},
      #{groupId ,jdbcType=VARCHAR}
    )
  </insert>
  
  <!-- MEMBERSHIP UPDATE -->
  
  <!-- MEMBERSHIP DELETE -->

  <delete id="deleteMembershipsByUserId" parameterType="string">
    delete from ACT_ID_MEMBERSHIP 
    where USER_ID_ = #{userId} 
  </delete>

  <delete id="deleteMembership" parameterType="map">
    delete from ACT_ID_MEMBERSHIP 
    where USER_ID_ = #{userId}
      and GROUP_ID_ = #{groupId} 
  </delete>

  <!-- MEMBERSHIP RESULTMAP -->
  
  <!-- MEMBERSHIP SELECT -->

  <delete id="deleteMembershipsByGroupId" parameterType="string">
    delete from ACT_ID_MEMBERSHIP 
    where GROUP_ID_ = #{groupId} 
  </delete>
  
</mapper>