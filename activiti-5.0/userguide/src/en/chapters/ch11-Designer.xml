<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../target/docbook-tool-1.0/docbook-xml/docbookx.dtd">

<chapter>

  <title>Eclipse Designer</title>
  
  <para>
    Activiti comes with an Eclipse plugin, the Activiti Eclipse Designer, that can be used to graphically model, test and deploy BPMN 2.0 processes 
    Eclipse. The Activiti Eclipse Designer is started and maintained by Tijs Rademakers, Tiese Barrell, 
    Ron van Liempd and Yvo Swillens.
  </para>
  
  <section id="eclipseDesignerInstallation">
  
    <title>Installation</title>
    
    <para>
      The following installation instructions are verified on  
      <ulink url="http://www.eclipse.org/downloads/">Eclipse Classic Helios</ulink>.
    </para>
    
    <para>
      Go to <emphasis role="bold">Help -> Install New Software</emphasis>. In the following panel,
      click on <emphasis>Add</emphasis> button and fill in the following fields:
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Name: </emphasis>Activiti BPMN 2.0 designer</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Location: </emphasis>http://activiti.org/designer/update/</para>
        </listitem>
      </itemizedlist> 
      <mediaobject><imageobject><imagedata align="center" fileref="images/designer.add.update.site.png"/></imageobject></mediaobject>
      Make sure the <emphasis role="bold">"Contact all updates sites.."</emphasis> checkbox is not checked, because all the necessary plugins
      can be downloaded from the Activiti update site.
    </para>
    
  </section>
  
  <section id="eclipseDesignerEditorFeatures">
  
    <title>Activiti Designer editor features</title>
    
    <para>
      <itemizedlist>
        <listitem>
          <para>
            Create Activiti projects and diagrams.
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.create.activiti.project.png"/></imageobject></mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>
            The Activiti project is generated as a Maven project. To configure the dependencies you need to run <emphasis>mvn eclipse:eclipse</emphasis>
            and the project dependencies will be configured as expected.
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.project.maven.png"/></imageobject></mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>
            A BPMN 2.0 XML file and an image of the process are automatically generated after each save of the Activiti diagram 
            (the automatic generation can be switched of in the Eclipse preferences in the Activiti tab).
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.export.to.bpmn20.png"/></imageobject></mediaobject>
          </para>
        </listitem> 
        <listitem>
          <para>
            Generate a unit test (right click on a BPMN 2.0 XML file in the package explorer and select <emphasis>generate unit test</emphasis>)
            A unit test is generated with an Activiti configuration that runs on an embedded H2 database. You can now run the unit test to test
            your process definition.
             <mediaobject><imageobject><imagedata align="center" fileref="images/designer.unittest.generate.png"/></imageobject></mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>
            The BPMN 2.0 XML is opened in a Activiti XML editor which provides content assist. Note that there are 2 main XSDs configured, the
            BPMN 2.0 spec XSD and the Activiti extensions XSD. These two XSDs are not yet alligned in a good manneer.
             <mediaobject><imageobject><imagedata align="center" fileref="images/designer.xml.contentassist.png"/></imageobject></mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>
            A basic validation is performed after each save of the Activiti diagram and the errors are mentioned in the Eclipse problem view.
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.problem.view.png"/></imageobject></mediaobject>
          </para>
        </listitem> 
        <listitem>
          <para>
            A basic deployment editor is available when right-clicking on an Activiti diagram in the package explorer. You see a Deployment property
            at the end of the pop-up items. The deployment editor currently supports saving a BAR file, and will be extended in the next release
            to also deploy the BAR file to the Activiti engine.
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.deployment.editor.png"/></imageobject></mediaobject>
          </para>
        </listitem>     
      </itemizedlist>
    </para>
  
  </section>
  
  <section id="eclipseDesignerBPMNFeatures">
  
    <title>Activiti Designer BPMN features</title>
    
    <para>
      <itemizedlist>
        <listitem>
          <para>
            Support for start event, end event, sequence flow, parallel gateway, exclusive gateway, 
            embedded subprocess, script task, user task, service task, mail task and manual tasks.
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.model.process.png"/></imageobject></mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>
            Java class or expression configuration is supported for the Java service task. In addition field extensions can be configured.
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.servicetask.property.png"/></imageobject></mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>
            Support for additional Activiti extensions like the Mail task, the candidate configuration of User tasks and Script task configuration.
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.mailtask.property.png"/></imageobject></mediaobject>
          </para>
        </listitem>
        <listitem>
          <para>
            Support for conditions on sequence flows.
            <mediaobject><imageobject><imagedata align="center" fileref="images/designer.sequence.condition.png"/></imageobject></mediaobject>
          </para>
        </listitem>              
      </itemizedlist>
    </para>
  
  </section>
 
</chapter>
