<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../target/docbook-tool-1.0/docbook-xml/docbookx.dtd">

<chapter>

  <title>Activiti Cycle</title>
  
  <para>
    Activiti Cycle is a web application that provides a collaborative platform for different stakeholders of BPM projects (Business, developers, IT operations, ...).
    It combines different repositories like the Activiti Modeler repository, Subversion or your local file system into a single view, 
    which makes it easy to browse all the artifacts that are involved in the process of creating an executable business process. 
    In addition to this, Activiti Cycle provides built in actions like moving artifacts between repositories or downloading different
    formats of process models, and a plug-in infrastructure for custom actions. Below is a screen shot of Cycle in a default 
    configuration as pre-configured in the demo setup.
    
    <emphasis role="bold">Please note: Activiti Cycle is still in a "beta" state.</emphasis>
    With collaborative tools like Activiti Cycle we dont have years of experience yet, like we have with the core engine. Currently
    most features are already stable, but with adding more use cases and features, we still have to do some tuning of the APIs or database tables. 
    This means, that for example the Plugin-API is still subject to change, which you have to know when you start writing own plugins. 
    Or the database might change without having out-of-the-box database migration scripts ready. But be sure: We work hard on removing the beta status,
    meaning you will get a stable API and database schema.
  </para>
  
  <mediaobject><imageobject><imagedata align="center" fileref="images/activiti.cycle.png"/></imageobject></mediaobject>
  
  <section>
    <title>Overview</title>  
    <para>
      Since Activiti Cycle is meant to be used by people with entirely different roles, backgrounds and requirements, it was build 
      with customization and extensibility in mind. However, the plug-in infrastructure which is already present in the current release
       is just a first step to make it possible to tailor Cycle to your specific needs. Future versions will provide a revised plug-in mechanism, 
       a user interface to configure and plug in repositories, tags to dynamically add meta data to artifacts and a commenting function to 
       directly collaborate on an artifact level. You can find a brief introduction to the initial version of Activiti Cycle and the vision 
       behind it in the article <ulink url="http://www.bpm-guide.de/2010/08/27/activiti-cycle-explained/">Activiti Cycle explained</ulink>.
    </para>
  </section>

  <section>
    <title>Repositories</title>
    <mediaobject><imageobject><imagedata align="center" fileref="images/activiti.cycle.repositories.png"/></imageobject></mediaobject>
    <para>
        The above image shows the Activiti Cycle repository tree.
        By default it provides access to the repository of the Activiti Modeler
        and a demo Eclipse workspace, which is located at
        <literal>${activiti.home}/workspace/activiti-cycle-examples</literal>
        in your local file system.
        The repositories are plugged in as repository connectors.
        You'll find the configuration as an XML string in
        the table <literal>CYCLE_CONFIG</literal> in the Activiti database,
        which you can access as described in <xref linkend="inspecting.database"/>.
        Here is the default configuration for the user kermit:
    </para>
    
    <programlisting>
      ...
      &lt;org.activiti.cycle.impl.conf.ConfigurationContainer&gt;
        &lt;name&gt;kermit&lt;/name&gt;
        &lt;linkedConnectors&gt;
          &lt;org.activiti.cycle.impl.connector.signavio.SignavioConnectorConfiguration&gt;
            &lt;id&gt;Activiti&lt;/id&gt;
            &lt;name&gt;Activiti Modeler&lt;/name&gt;
            &lt;signavioBaseUrl&gt;http://localhost:8080/activiti-modeler/&lt;/signavioBaseUrl&gt;
            &lt;loginRequired&gt;false&lt;/loginRequired&gt;
            &lt;credentialsSaved&gt;true&lt;/credentialsSaved&gt;
            &lt;user&gt;&lt;/user&gt;
            &lt;password&gt;&lt;/password&gt;
          &lt;/org.activiti.cycle.impl.connector.signavio.SignavioConnectorConfiguration&gt;
          &lt;org.activiti.cycle.impl.connector.fs.FileSystemConnectorConfiguration&gt;
            &lt;id&gt;Workspace&lt;/id&gt;
            &lt;name&gt;Eclipse Workspace (File System)&lt;/name&gt;
            &lt;baseFilePath&gt;/path-to-activiti-home/activiti-5.0.beta2/workspace/activiti-cycle-examples&lt;/baseFilePath&gt;
          &lt;/org.activiti.cycle.impl.connector.fs.FileSystemConnectorConfiguration&gt;
        &lt;/linkedConnectors&gt; &lt;parentContainers/&gt;
      &lt;/org.activiti.cycle.impl.conf.ConfigurationContainer&gt;
      ...
    </programlisting>
    
    <para>
        Now, if you want to add, e.g., a Signavio Process Modeler repository,
        you can simply do this by adding a connector configuration to the XML configuration.
        If you need a Signavio account, you can register for a free trial
        at the <ulink url="http://www.signavio.com">Signavio web site</ulink>.
        Here is an example configuration:
    </para>
    
    <programlisting>
      ...
      &lt;org.activiti.cycle.impl.connector.signavio.SignavioConnectorConfiguration&gt;
        &lt;id&gt;Signavio&lt;/id&gt;
        &lt;name&gt;Signavio&lt;/name&gt;
        &lt;signavioBaseUrl&gt;https://editor.signavio.com/&lt;/signavioBaseUrl&gt;
        &lt;loginRequired&gt;true&lt;/loginRequired&gt;
        &lt;credentialsSaved&gt;true&lt;/credentialsSaved&gt;
        &lt;user&gt;your user name&lt;/user&gt;
        &lt;password&gt;secret&lt;/password&gt;
      &lt;/org.activiti.cycle.impl.connector.signavio.SignavioConnectorConfiguration&gt;
      ...
    </programlisting>
    
    <para>
        You may also choose not to save your username and password in the database
        by setting 'credentialsSaved' to 'false' and leaving 'user' and 'password' empty.
        Cycle will then ask you for your credentials when it needs them.
    </para>

    <para>
        Another thing you might consider
        is to add a collection of BPMN examples from
        the <ulink url="http://oryx-project.org/">Oryx Project</ulink>.
        In order to do this, all you need is the following connector configuration:
    </para>
    
    <programlisting>
      ...
      &lt;org.activiti.cycle.impl.connector.signavio.OryxConnectorConfiguration&gt;
        &lt;id&gt;Signavio&lt;/id&gt;
        &lt;name&gt;oryx-project.org&lt;/name&gt;
        &lt;signavioBaseUrl&gt;http://oryx-project.org/&lt;/signavioBaseUrl&gt;
        &lt;loginRequired&gt;false&lt;/loginRequired&gt;
        &lt;credentialsSaved&gt;true&lt;/credentialsSaved&gt;
        &lt;user&gt;&lt;/user&gt;
        &lt;password&gt;&lt;/password&gt;
      &lt;/org.activiti.cycle.impl.connector.signavio.OryxConnectorConfiguration&gt;
      ...
    </programlisting>
    	
    <para>
    	Activiti Cycle also has the capabilities to connect to SVN (Subversion) repositories. 
    	The following is an example configuration for the SVN Connector:    
    </para>
    
    <programlisting>
	...
	&lt;org.activiti.cycle.incubator.connector.svn.SvnConnectorConfiguration&gt;
		&lt;id&gt;ActivitiPublicSVN&lt;/id&gt;
		&lt;name&gt;Activiti Public SVN&lt;/name&gt;
		&lt;repositoryPath&gt;http://svn.codehaus.org/activiti&lt;/repositoryPath&gt;
		&lt;credentialsSaved&gt;true&lt;/credentialsSaved&gt;
		&lt;user&gt;&lt;/user&gt;
		&lt;password&gt;&lt;/password&gt;
		&lt;temporaryFileStore&gt;where the connector creates temporary files between commits (e.g. /tmp)&lt;/temporaryFileStore&gt;
	&lt;/org.activiti.cycle.incubator.connector.svn.SvnConnectorConfiguration&gt;
	...
	</programlisting>   
	<para> 
	Note: there are currently two configuration options for the Activiti Cycle SVN Connector:
	 <itemizedlist>
      <listitem><para>SVN is installed on the machine running Activiti and in the local PATH.</para></listitem>
      <listitem><para>You need to manually download the <ulink url="http://www.svnkit.org/">SVNKit</ulink> 
      library and install it. To this end, download the SVNKit library and copy both <literal>svnkit.jar</literal> 
      and <literal>svnkit-javahl.jar</literal> to the following location: 
      <literal>${activiti.home}/apps/apache-tomcat-6.X.XX/webapps/activiti-rest/WEB-INF/lib</literal>. (Tomcat restart required.) 
      SVNKit cannot be bundled with Activiti due to licensing restrictions.</para></listitem>
     </itemizedlist>	
     Please note that the SVN Connector is still in incubation and considered experimental.
    </para> 
	
  </section>
  
  <section>
    <title>Artifacts and Actions</title>
    <para>
      When you click an item in the repository tree — in Activiti Cycle we refer to them as artifacts — the details are displayed on the right side. 
      Currently, not all files are supported, but we aim to provide useful default views for the most common file types. 
      In addition to the views, there is a set of actions that can be executed on the artifact.      
    </para>
    <mediaobject><imageobject><imagedata align="center" fileref="images/activiti.cycle.action.forms.png"/></imageobject></mediaobject>
    <para>
      The actions can be seen as examples what Cycle can do for you, will be extended in future and can be a starting point for your additional actions
      written in your own plugin.
    </para>
  </section>
  
</chapter>
