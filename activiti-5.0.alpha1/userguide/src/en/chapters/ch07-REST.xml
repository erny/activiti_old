<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../target/docbook-tool-1.0/docbook-xml/docbookx.dtd">

<chapter>

  <title>REST API</title>

  <para>
    Activiti includes a REST API to the engine that will be deployed to your server when you run the setup script.
    The API is implemented using Spring Webscripts which provides a secure runtime environment where you may choose
    between different programming languages to implement your REST API in.
    The Activiti REST API is using Java to implement the logic and Freemarker to render the response templates.
    To read more about Spring Webscripts please visit http://www.springsurf.org/.
  </para>

  <para>
    It is possible to browse the REST API if you point your browser to http://localhost:8080/activiti-rest/service/index
    and login as one of the admin users (kermit). If you click the "Browse by Web Script Package" link you will get an overview
    of the packages that are deployed on the server and you can easily navigate into a package to see the rest api calls
    that are defined for that package. The "Alfresco Javascript Debugger" can be ignored since the rest api is using
    Java instead of JavaScript to implement the logic.
  </para>

  <para>
    Each REST API call has its individual authorisation level and you must be logged in as a user to invoke a REST API
    call (except for the /login service). Authentication is done using Basic HTTP Authentication, so if you logged in as
    admin to browse the REST API, as described above, you should be able to perform all calls as described below.
  </para>

  <para>
    The base url for invoking a REST call is http://localhost:8080/activiti-rest/service/.
    So for example to list the process definitions in the engine point your browser to:
    http://localhost:8080/activiti-rest/service/process-engine
  </para>

  <para>
    Please look below to see what REST API calls that currently are available:
  </para>

  <section>

    <title>API</title>

    <!-- ENGINE -->

    <section>

      <title>Engine</title>

      <section>
        <title>Get Process Engine Information</title>
        <para>
          Returns the process engine initialization information. If something went wrong during startup, information
          about the error will be given in the "exception" attribute in the response.
        </para>
        <itemizedlist>
          <listitem>
            <para>
              <emphasis role="bold">Request: </emphasis>
              <literal>GET /process-engine</literal>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">API: </emphasis>
              <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName)</literal>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">Response:</emphasis>
              <programlisting>
{
  "name": "default",
  "resourceUrl": "jar:file:\//&lt;path-to-deployment&gt;\/activiti-cfg.jar!\/activiti.cfg.xml",
  "exception": null,
  "version": "5.0.alpha2-SNAPSHOT"
}</programlisting>
            </para>
          </listitem>
        </itemizedlist>
      </section>

    </section>

    <!-- PROCESSES -->

    <section>

      <title>Processes</title>

      <section>
        <title>List Process Definitions</title>
        <para>
          Returns information about the deployed process definitions.
        </para>
        <itemizedlist>
          <listitem>
            <para>
              <emphasis role="bold">Request:</emphasis>
              <literal>GET /process-definitions</literal>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">API:</emphasis>
              <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getProcessService().findProcessDefinitions()</literal>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">Response:</emphasis>
              <programlisting>
{
  "data":
  [
    {
      "id": "financialReport:1",
      "key": "financialReport",
      "version": 1,
      "name": "Monthly financial report"
    }
  ]
}</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Create Process Instance</title>
      <para>
        Creates a process instance based on a process definition and returns information about the newly created process instance.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">Request:</emphasis>
            <literal>POST /process-instance</literal>
            <programlisting>
{
  "processDefinitionId":"financialReport:1"
}</programlisting>
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">API:</emphasis>
            <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getProcessService().startProcessInstanceById(processDefinitionId)</literal>
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Response:</emphasis>
            <programlisting>
{
  "id": "217",
  "processDefinitionId": "financialReport:1",
  "activityNames": ["writeReportTask"],
  "ended": true
}</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>

  </section>



  <!-- TASKS -->

  <section>

    <title>Tasks</title>

    <section>
      <title>Task Summary</title>
      <para>
        Returns a task summary for a specific user: The number of tasks assigned the user, how many unassigned tasks
        that the user may claim and how many unassigned tasks there are per group that the user is a member of.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">Request:</emphasis>
            <literal>GET /tasks-summary?user={userId}</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">API:</emphasis>
            <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().createTaskQuery().xxx().count()</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Response:</emphasis>
            <programlisting>
{
  "assigned": {
    "total": 0
  },
  "unassigned": {
    "total": 1,
    "groups":
    {
      "accountancy": 1,
      "sales": 0,
      "engineering": 0,
      "management": 0
    }
  }
}</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>


    <section>
      <title>List Tasks</title>
      <para>
        Returns a task list based on a) user of a specific role: assignee (lists the tasks assigned to the user) or
        candidate (lists the tasks that the user may claim) or a candidate group (lists tasks that the members of the group may claim).
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">Request:</emphasis>
            <literal>GET /tasks?[assignee={userId}|candidate={userId}|candidate-group={groupId}]</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">API:</emphasis>
            <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().createTaskQuery().xxx().pagedList()</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Response:</emphasis>
            <programlisting>
{
  "data": [
    {
      "id": 218,
      "name": "Write monthly financial report",
      "description": "Write monthly financial report for publication to shareholders.",
      "priority": 2,
      "assignee": null,
      "executionId": 217
    }
  ],
  "totalRecords": 1,
  "startIndex": 0,
  "sort": "id",
  "dir": "asc",
  "pageSize": 10
}</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Perform Task Operation</title>
      <para>
        Performs an operation (claim or complete) on a task.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">Request:</emphasis>
            <literal>PUT /task/{taskId}/[claim|complete]</literal>
            <programlisting>{}</programlisting>
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">API:</emphasis>
            <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getTaskService().xxx(taskId[, currentUserId])</literal>
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Response:</emphasis>
            <programlisting>
{
  "success": true
}</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>

  </section>


  <!-- USER -->

  <section>

    <title>Users</title>

    <section>
      <title>Get User Information</title>
      <para>
        Returns information about a user.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">Request:</emphasis>
            <literal>GET /user/{userId}</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">API:</emphasis>
            <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().findUser(userId)</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Response:</emphasis>
            <programlisting>
{
  "id": "kermit",
  "firstName": "Kermit",
  "lastName": "the Frog",
  "email": "kermit@server.com"
}</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>List User's Groups</title>
      <para>
        Returns information about a user's groups. To only get groups of a certain type use the "type" parameter.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">Request:</emphasis>
            <literal>GET /user/{userId}/groups[?type=groupType]</literal>
            <programlisting>{}</programlisting>
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">API:</emphasis>
            <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().xxx(userId[, groupType])</literal>
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Response:</emphasis>
            <programlisting>
[
  {
    "id": "admin",
    "name": "System administrator",
    "type": "security-role"
  }
]</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>
  </section>


  <!-- DATABASE TABLES -->

  <section>

    <title>Database</title>

    <section>
      <title>List Database Tables</title>
      <para>
        Returns information about all database tables in the engine.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">Request:</emphasis>
            <literal>GET /management/tables</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">API:</emphasis>
            <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getManagementService().getTableCount()</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis role="bold">Response:</emphasis>
            <programlisting>
{
  "data": [
    {
      "tableName": "ACT_PROPERTY",
      "noOfResults": 2
    }
  ]
}</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Get Table Data</title>
      <para>
        Returns data from a database table. Result will be paginated even if no pagination parameters are provided.
        Default value for startIndex is 0 and default value for pageSize is 10.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">Request:</emphasis>
            <literal>GET /management/table/{tableName}?startIndex=0&amp;pageSize=10</literal>
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">API:</emphasis>
            <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getManagementService().getTablePage(tableName, startIndex, pageSize))</literal>
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Response:</emphasis>
            <programlisting>
{
  "metadata": {
    "tableName": "ACT_PROPERTY",
    "columnNames": ["REV_","NAME_","VALUE_"],
    "columnNames": ["class java.lang.Integer","class java.lang.String","class java.lang.String"]
  },
  "data": [
    {
      "NAME_": "schema.version",
      "REV_": "1",
      "VALUE_": "5.0.alpha2-SNAPSHOT"
    },
    {
      "NAME_": "next.dbid",
      "REV_": "4",
      "VALUE_": "310"
    }
  ],
  "totalRecords": 2,
  "startIndex": 0,
  "sort": "",
  "dir": "asc",
  "pageSize": 2
}</programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </section>

    </section>

    <!-- AUTHENTICATION -->

    <section>

      <title>Authentication</title>

      <section>
        <title>Login</title>
        <para>
          Authenticates a user.
        </para>
        <itemizedlist>
          <listitem>
            <para>
              <emphasis role="bold">Request:</emphasis>
              <literal>POST /login</literal>
  <programlisting>
{
  "userId": "kermit",
  "password": "kermit"
}</programlisting>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">API:</emphasis>
              <literal>ProcessEngines.getProcessEngine(configuredProcessEngineName).getIdentityService().checkPassword(userId, password)</literal>
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">Response:</emphasis>
              <programlisting>
{
  "success": true
}</programlisting>
            </para>
          </listitem>
        </itemizedlist>
      </section>

    </section>

  </section>
  
</chapter>
