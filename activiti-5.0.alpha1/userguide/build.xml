<?xml version="1.0" encoding="UTF-8"?>

<project name="activiti.userguide" default="build.userguide">

	<!-- 
	Special thanks to Las Vogel for his great online instructions
	http://www.vogella.de/articles/DocBook/article.html
	-->
	
  <property name="docbooktool.version" value="1.0" />
  <property name="docbooktool.dir" value="target/docbook-tool-${docbooktool.version}" />
  <property name="docbook.xsl.dir" value="${docbooktool.dir}/docbook-xsl" />
	<property name="html.stylesheet" value="${docbook.xsl.dir}/html/docbook.xsl" />
  <property name="fo.stylesheet" value="${docbook.xsl.dir}/fo/docbook.xsl" />

	<available file="${docbooktool.dir}" property="docbooktool.is.available" />

	<target name="build.userguide" depends="install.docbooktool, build.html" />
	
  <path id="xslt.classpath">
    <fileset dir="${docbooktool.dir}/xalan">
        <include name="*.jar"/>
    </fileset>
  </path>

  <path id="fop.classpath">
    <fileset dir="${docbooktool.dir}/fop">
        <include name="*.jar"/>
    </fileset>
  </path>

	<target name="clean" description="Cleans up generated files.">
    <delete dir="target/html" />
    <delete dir="target/pdf" />
    <delete dir="target/tmp" />
	</target>

  <target name="install.docbooktool" unless="docbooktool.is.available">
  	<mkdir dir="target" />
    <exec executable="mvn">
      <arg line="compile" />
    </exec>
  </target>
	
	<target name="prepare.src">
		<mkdir dir="target/prepared-src" />
		<copy todir="target/prepared-src" overwrite="true">
			<fileset dir="src" />
		</copy>
		<replace value="" dir="target/prepared-src/en/chapters">
			<include name="*.xml"/>
			<replacetoken><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../target/docbook-tool-1.0/docbook-xml/docbookx.dtd">]]></replacetoken>
		</replace>
	</target>

	<target name="build.html"
		      depends="prepare.src"
		      description="Generates HTML files from DocBook XML">
    <mkdir dir="target/html" />
		<xslt style="${html.stylesheet}" extension=".html" basedir="target/prepared-src" destdir="target/html">
			<include name="en/index.xml" />
			<param name="html.stylesheet" expression="style.css" />
			<classpath refid="xslt.classpath" />
		</xslt>
		<copy todir="target/html/en">
			<fileset dir="target/prepared-src">
				<include name="style.css" />
			</fileset>
      <fileset dir="src/en">
        <include name="images/**" />
      </fileset>
			<fileset dir="src/en/js">
		    <include name="**" />
			</fileset>
		</copy>
		
		<!-- post html generation prettifying -->
		<!-- TODO: replace with something more intelligent -->
		<replace file="target/html/en/index.html">
		  <replacetoken><![CDATA[<link href="style.css" rel="stylesheet" type="text/css">]]></replacetoken>
			<replacevalue><![CDATA[<link href="style.css" rel="stylesheet" type="text/css">
				<script type="text/javascript" src="prettify.js"></script>]]></replacevalue>
		</replace>
		<replace file="target/html/en/index.html">
		  <replacetoken><![CDATA[<body bgcolor="white"]]></replacetoken>
		  <replacevalue><![CDATA[<body onload="prettyPrint()" bgcolor="white"]]></replacevalue>
		</replace>
		<replace file="target/html/en/index.html">
		  <replacetoken><![CDATA[programlisting]]></replacetoken>
		  <replacevalue><![CDATA[prettyprint]]></replacevalue>
		</replace>
		
	</target>
	
	<target name="build.pdf">
		<mkdir dir="target/tmp" />
		<xslt style="${fo.stylesheet}" extension=".fo" basedir="src" destdir="target/tmp">
      <include name="en/index.xml" />
	    <param name="section.autolabel" expression="1" />
	  </xslt>
    <taskdef name="fop" 
             classname="org.apache.fop.tools.anttasks.Fop" 
             classpathref="fop.classpath"/>
	  <fop format="application/pdf" outdir="target/pdf">
	    <fileset dir="target/tmp">
	      <include name="**/*.fo" />
	    </fileset>
	  </fop>
	</target>

</project>