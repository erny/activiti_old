<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../target/docbook-tool-1.0/docbook-xml/docbookx.dtd">

<chapter id="taskForms">

	<title>Task Forms</title>
	
	<para>
	 Business process are used to coordinate and facilitate the way on how people collaborate
	 to fullfill the goals of a business. People typically nowadays work in (web-based) user
	 interfaces trough forms to actually do that work.
	</para>
	
	<para>
	 The Activiti task forms are a way to attach such data input forms to 
	 <emphasis role="bold">start events and user tasks</emphasis>. When using the Activiti Explorer
	 webapplication and the form format as described below, these forms will automatically
	 be visualized such that user input can be captured for process continuation.
	</para>
	
	<para>
	 An example process (<emphasis role="bold">vacation request</emphasis>) is deployed
	 when running the demo setup.
	</para>

  <section id="taskFormDeclaration" >
  
    <title>Definition in the process model</title>
    
    <para>
      The BPMN 2.0 specification does not specifify how tasks or task forms should be rendered, 
      as such forms are defined using Activiti specific constructs.
      Forms are file resources on the classpath that are referenced by the <emphasis role="bold">form</emphasis> attribute
      (note that this is done under the Activiti namespace).
    </para>
    
    <para>      
      <programlisting>&lt;startEvent id=&quot;request&quot; 
            <emphasis role="bold">activiti:form=&quot;org/activiti/examples/taskforms/request.form</emphasis>&quot; /&gt;

&lt;sequenceFlow id=&quot;flow1&quot; sourceRef=&quot;request&quot; targetRef=&quot;handleRequest&quot; /&gt;
    
&lt;userTask id=&quot;handleRequest&quot; name=&quot;Handle vacation request&quot;
          <emphasis role="bold">activiti:form=&quot;org/activiti/examples/taskforms/approve.form&quot;</emphasis> &gt;
  &lt;documentation&gt;
     Vacation request by ${employeeName}
  &lt;/documentation&gt; 
  ...        
 &lt;/userTask&gt;</programlisting>
    </para> 
    
     <para>
      Note however that you could fill in the form attribute with any
      text value that you want if you are not using Activiti Explorer. 
    </para>
    
  </section>
  
  <section id="taskFormFormat">
  
    <title>Form format</title>
    
    <para>
      The task forms that are compatible with Activiti Explorer are plain HTML text files (we have the habit of
      naming them <emphasis>*.form</emphasis>). For example, such a form could look like this:
      <programlisting>&lt;h1&gt;Vacation Request&lt;/h1&gt;

Employee Name:&lt;br/&gt;
&lt;input type=&quot;text&quot; name=&quot;employeeName&quot; value=&quot;&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;employeeName_required&quot; value=&quot;true&quot; /&gt;

Number of days:&lt;br/&gt;
&lt;input type=&quot;text&quot; name=&quot;numberOfDays&quot; value=&quot;1&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;numberOfDays_type&quot; value=&quot;Integer&quot; /&gt;

&lt;input type=&quot;checkbox&quot; name=&quot;vacationPay&quot;/&gt; Vacation pay requested
&lt;input type=&quot;hidden&quot; name=&quot;vacationPay_boolean&quot; value=&quot;true&quot;/&gt;

Motivation:&lt;br/&gt;
&lt;textarea name=&quot;vacationMotivation&quot; value=&quot;&quot;&gt;&lt;/textarea&gt;</programlisting>
    </para>
  
  </section>
  
  <section id="taskFormApi">
  
    <title>API</title>
    
    <para>
      Forms are to be deployed together with the processes that reference them.
      This is done through the <emphasis>DeploymentBuilder</emphasis>
      <programlisting>Deployment deployment = processService.newDeployment()
  .addClasspathResource(&quot;org/activiti/examples/taskforms/VacationRequest.bpmn20.xml&quot;)
  .addClasspathResource(&quot;org/activiti/examples/taskforms/approve.form&quot;)
  .addClasspathResource(&quot;org/activiti/examples/taskforms/request.form&quot;)
  .addClasspathResource(&quot;org/activiti/examples/taskforms/adjustRequest.form&quot;)
  .deploy();</programlisting>
    </para>
    
    <para>
      When deployed, Activiti Explorer can now use these forms. When you click to a process definition name
      to start a certain process instance, the startform is first retrieved: 
      <programlisting>Object startForm = processService.getStartFormByKey("vacationRequest");</programlisting>
      (Note that the return value is an <emphasis>object</emphasis>, such that people can plug in their own form types
      into the Activiti engine.)
   </para>
   
   <para>   
     If the startForm return value is not null, it is displayed <emphasis role="bold">before a process instance is created</emphasis>.
     When the form is submitted, all the data inputs are gathered and stored as a process variable when starting the process instance:
     <programlisting>processService.startProcessInstanceByKey(&quot;vacationRequest&quot;, Map&lt;String, Object&gt;);</programlisting>
     <mediaobject><imageobject><imagedata align="center" fileref="images/taskform.example.png"/></imageobject></mediaobject>
      The mechanism for defining forms on user task is exactly the same.
      <programlisting>Object taskForm = taskService.getTaskForm(task.getId());</programlisting>
      Activiti Explorer will display these forms when the <emphasis>Complete</emphasis>
      button is clicked. The variables in the form will be stored as process variables 
      during the completion of the task:
      <programlisting>taskService.complete(String taskId, Map&lt;String, Object&gt; variables);</programlisting>
    </para>
    
    <para>
      Some extra points about the forms:
      <itemizedlist>
         <listitem>
          <para>
            Variable names must be camelcased.
          </para>
        </listitem>
        <listitem>
          <para>
            The default type of the process variable that is stored is <emphasis>string</emphasis>.
            Use a hidden field with the input variable name followed by <emphasis>'_type'</emphasis> to define the type (and hence also the conversion from the HTML
            input to the variable): <programlisting>&lt;input type=&quot;hidden&quot; name=&quot;numberOfDays<emphasis role="bold">_type</emphasis>&quot; value=&quot;Integer&quot; /&gt;</programlisting>
            Currently supported are <emphasis>String, Integer, Boolean, Date</emphasis>.
          </para>
        </listitem>
        <listitem>
          <para>
            Input variables can be made required by adding a hidden field with the input variable name followed
            by '_required':
            <programlisting>&lt;input type=&quot;hidden&quot; name=&quot;employeeName_required&quot; value=&quot;true&quot; /></programlisting>
          </para>
        </listitem>
      </itemizedlist>
    </para>
  
  </section>
  
  <section id="taskFormExample">
  
    <title>Example</title>
    
    <para>
      The demo setup script installs the <emphasis>vacationRequest</emphasis> business process 
      as an example of using taskforms through Activiti Explorer. Please check the example
      for the complete source code.
      The business process mode looks as follows:
      
      <mediaobject><imageobject><imagedata align="center" fileref="images/taskform.vacation.request.model.png"/></imageobject></mediaobject>
      
      The flow of the process is easy to understand. The process starts when an employee fills
      in the vacation request form, stating the requested amount of days and a motivation.
      <programlisting>&lt;h1&gt;Vacation Request&lt;/h1&gt;

Employee Name:&lt;br/&gt;
&lt;input type=&quot;text&quot; name=&quot;employeeName&quot; value=&quot;&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;employeeName_required&quot; value=&quot;true&quot; /&gt;

Number of days:&lt;br/&gt;
&lt;input type=&quot;text&quot; name=&quot;numberOfDays&quot; value=&quot;1&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;numberOfDays_type&quot; value=&quot;Integer&quot; /&gt;

Vacation pay requested
&lt;input type=&quot;checkbox&quot; name=&quot;vacationPay&quot;/&gt; Vacation pay requested
&lt;input type=&quot;hidden&quot; name=&quot;vacationPay_boolean&quot; value=&quot;true&quot;/&gt;

Motivation:&lt;br/&gt;
&lt;textarea name=&quot;vacationMotivation&quot; value=&quot;&quot;&gt;&lt;/textarea&gt;</programlisting>
    </para>
  
    <para>
      After submitting the form, a process instance is started and now someone of the
      management team needs to handle the request.   
      <mediaobject><imageobject><imagedata align="center" fileref="images/taskform.vacation.request.management.group.png"/></imageobject></mediaobject>
      The corresponding user task has a taskform attached to it, which uses the
      variables which were given as input by the employee in the start form. These variables
      are referenced as expressions and are resolved at runtime to their text representation.
      <programlisting>&lt;h1&gt;Vacation Approval&lt;/h1&gt;
&lt;p&gt;
  ${employeeName} would like to take ${numberOfDays} day(s) of vacation.
&lt;/p&gt;
&lt;p&gt;
  Motivation: ${vacationMotivation}
&lt;/p&gt;
&lt;p&gt;
  Do you approve this?
  &lt;select name=&quot;<emphasis role="bold">vacationApproved</emphasis>&quot;&gt;
    &lt;option value=&quot;true&quot;&gt;Yes&lt;/option&gt;
    &lt;option value=&quot;false&quot;&gt;No&lt;/option&gt;
   &lt;/select&gt;
   &lt;input type=&quot;hidden&quot; name=&quot;vacationApproved_type&quot; value=&quot;Boolean&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;label&gt;
    Motivation:&lt;br/&gt;
    &lt;textarea name=&quot;managerMotivation&quot; value=&quot;&quot;&gt;&lt;/textarea&gt;
  &lt;/label&gt;
&lt;/p&gt;</programlisting>
    </para>
    
    <para>
      The manager will now indicate in the form whether the vacation request is approved or not,
      by selecting the appropriate input in the form. 
      <mediaobject><imageobject><imagedata align="center" fileref="images/taskform.vacation.request.approve.form.png"/></imageobject></mediaobject>
      The result is stored in as a process variable,
      which is then used in the exclusive gateway after the form is submitted.
      <programlisting>
&lt;sequenceFlow id=&quot;flow5&quot; sourceRef=&quot;requestApprovedDecision&quot; targetRef=&quot;adjustVacationRequestTask&quot;&gt;
  &lt;conditionExpression xsi:type=&quot;tFormalExpression&quot;&gt;${!<emphasis role="bold">vacationApproved</emphasis>}&lt;/conditionExpression&gt;
&lt;/sequenceFlow&gt;    
      </programlisting>
    </para>
    
    <para>
      Depending on the input of the manager in the user task, the employee will now
      get a new task in his personal task list, stating that the vacation request was
      dissaproved and it needs can be refilled if wanted.
      <mediaobject><imageobject><imagedata align="center" fileref="images/taskform.vacation.request.adjust.form.png"/></imageobject></mediaobject>
      The employee can now choose to resend the vacation request, which brings process
      execution again in the user task for the manager. Or the employee can throw away
      the request, ending the process.
      <programlisting>&lt;h1&gt;Adjust vacation Request&lt;/h1&gt;
&lt;p&gt;
  Your manager has disapproved your vacation request for ${numberOfDays} days. &lt;br/&gt;
  Reason: ${managerMotivation}
&lt;/p&gt;
&lt;p&gt;
  Number of days:&lt;br/&gt;
  &lt;input type=&quot;text&quot; name=&quot;numberOfDays&quot; value=&quot;${numberOfDays}&quot; /&gt;
  &lt;input type=&quot;hidden&quot; name=&quot;numberOfDays_type&quot; value=&quot;Integer&quot; /&gt;
&lt;/p
...</programlisting>
    </para>
  
  </section>

</chapter>
