<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="org.activiti.persistence">

  <!-- RESULTMAP -->

  <resultMap id="userResultMap" type="org.activiti.impl.identity.UserImpl">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="firstName" column="FIRST_" jdbcType="VARCHAR" />
    <result property="lastName" column="LAST_" jdbcType="VARCHAR" />
    <result property="email" column="EMAIL_" jdbcType="VARCHAR" />
    <result property="password" column="PWD_" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="groupResultMap" type="org.activiti.impl.identity.GroupImpl">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="name" column="NAME_" jdbcType="VARCHAR" />
    <result property="type" column="TYPE_" jdbcType="VARCHAR" />
  </resultMap>
  

  <!-- SELECT -->
  
  <select id="selectUser" parameterType="string" resultMap="userResultMap">
    select * from ACT_ID_USER where ID_ = #{id}
  </select>
  
  <select id="selectUsers" resultMap="userResultMap">
    select * from ACT_ID_USER
  </select>
  
  <select id="selectUsersByGroup" parameterType="string" resultMap="userResultMap">
    select user.*
    from ACT_ID_USER user, ACT_ID_MEMBERSHIP membership
    where user.ID_ = membership.USER_ID_
      and membership.GROUP_ID_ = #{groupId}
  </select>
  
  <select id="selectGroup" parameterType="string" resultMap="groupResultMap">
    select * from ACT_ID_GROUP where ID_ = #{id}
  </select>
  
  <select id="selectGroups" resultMap="groupResultMap">
    select * from ACT_ID_GROUP
  </select>
  
  <select id="selectGroupsByUser" parameterType="string" resultMap="groupResultMap">
    select g.*
    from ACT_ID_GROUP g, ACT_ID_MEMBERSHIP membership
    where g.ID_ = membership.GROUP_ID_
      and membership.USER_ID_ = #{userId}
  </select>

  <select id="selectGroupsByUserAndType" parameterType="map" resultMap="groupResultMap">
    select g.*
    from ACT_ID_GROUP g, ACT_ID_MEMBERSHIP membership
    where g.ID_ = membership.GROUP_ID_
      and membership.USER_ID_ = #{userId}
      and g.TYPE_ = #{groupType}
  </select>
  
  
  <!-- INSERT -->
  
  <insert id="insertUser" parameterType="org.activiti.impl.identity.UserImpl">
    insert into ACT_ID_USER (ID_, FIRST_, LAST_, EMAIL_, PWD_)
    values (
      #{id ,jdbcType=VARCHAR},
      #{firstName ,jdbcType=VARCHAR},
      #{lastName ,jdbcType=VARCHAR},
      #{email ,jdbcType=VARCHAR},
      #{password ,jdbcType=VARCHAR}
    )
  </insert>
  
  <insert id="insertGroup" parameterType="org.activiti.impl.identity.GroupImpl">
    insert into ACT_ID_GROUP (ID_, NAME_, TYPE_)
    values (
      #{id ,jdbcType=VARCHAR},
      #{name ,jdbcType=VARCHAR},
      #{type ,jdbcType=VARCHAR}
    )
  </insert>
  
  <insert id="insertMembership" parameterType="map">
    insert into ACT_ID_MEMBERSHIP (USER_ID_, GROUP_ID_)
    values (
      #{userId ,jdbcType=VARCHAR},
      #{groupId ,jdbcType=VARCHAR}
    )
  </insert>
  
  
  <!-- UPDATE -->

  <update id="updateUser" parameterType="org.activiti.impl.identity.UserImpl">
    update ACT_ID_USER set
      FIRST_ = #{firstName ,jdbcType=VARCHAR},
      LAST_ = #{lastName ,jdbcType=VARCHAR},
      EMAIL_ = #{email ,jdbcType=VARCHAR},
      PWD_ = #{password ,jdbcType=VARCHAR}
    where ID_ = #{id}
  </update>
  
  <update id="updateGroup" parameterType="org.activiti.impl.identity.GroupImpl">
    update ACT_ID_GROUP set
      NAME_ = #{name ,jdbcType=VARCHAR},
      TYPE_ = #{type ,jdbcType=VARCHAR}
    where ID_ = #{id}
  </update>
  
  
  <!-- DELETE -->
 
  <delete id="deleteUser" parameterType="string">
    delete from ACT_ID_USER where ID_ = #{userId} 
  </delete>

  <delete id="deleteGroup" parameterType="string">
    delete from ACT_ID_GROUP where ID_ = #{groupId} 
  </delete>

  <delete id="deleteMembershipsForGroup" parameterType="string">
    delete from ACT_ID_MEMBERSHIP 
    where GROUP_ID_ = #{groupId} 
  </delete>

  <delete id="deleteMembershipsForUser" parameterType="string">
    delete from ACT_ID_MEMBERSHIP 
    where USER_ID_ = #{userId} 
  </delete>

  <delete id="deleteMembership" parameterType="map">
    delete from ACT_ID_MEMBERSHIP 
    where USER_ID_ = #{userId}
      and GROUP_ID_ = #{groupId} 
  </delete>
  
</mapper>